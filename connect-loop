#!/usr/bin/env bash

. "$HOME/.bashrc"

## connect and autoreconnect
##
##
## (using mmcli 1.18.6)
## <massimo.manzato@gmail.com>

cd  /dev/shm/ || exit
wd=$(dirname $0)
cp "$wd/sites.list" .

. "$wd/mmcli_cl_functions"

#trap 'disconnectx' SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM
#trap 'disconnectx' SIGINT SIGQUIT SIGABRT SIGTERM

	#rfkill unblock all
	#sleep 2
	#ifconfig wifi0 192.168.1.254/24 up

#sv restart ModemManager
atime=$(date +%s)
printf "%s Initial checks \n" "$(date +%T)"
#connectx
#sleep 3

while true
do
	check
	if [[ ! $result == 'yes' ]]; then
		printf "%s Check FAILED %s at : %s  seconds \n" "$(date +%T)" "" ""
		echo -n > /dev/shm/NOT-CONNECTED
		connectx
		sleep 5
	fi


	im=$(mmcli -L |grep -m 1 "Modem" |cut -d/ -f6 |awk '{print $1}')
	ib=$(mmcli -m "$im" |grep -m 1 "Bearer" |cut -d/ -f6)
	declare -A arrayA="( $(mmcli -K --bearer $ib | awk '{ printf "[\"%s\"]=\"%s\" ", $1, $3}' ) )"

	site1=$(shuf sites.list | head -1)
	#printf "%s Connected time: %s  Testing.. %s: " "$(date +%T)" "${arrayA[bearer.stats.duration]}" "$site1"

	testping1=0
	testping2=0
	testping1=$(ping -4 -s 1 -c 3 -W 1 -n "$site1" | grep "9 bytes" -c )
	if [ "$testping1" -eq 0 ] && [ "${arrayA[bearer.stats.duration]}" -gt 14200 ]; then
		sleep 1 &
		wait $!
		printf "%s Restart Bearer %s at : %s  seconds \n" "$(date +%T)" "${arrayA[bearer.properties.apn]}" "${arrayA[bearer.stats.duration]}"
		mmcli -b "$ib" -x
		printf "%s Connect Bearer: %s \n" "$(date +%T)" "${arrayA[bearer.properties.apn]}"
		mmcli -b "$ib" -c
		printf "%s - Start setup IP and Routes %s \n" "$(date +%T)" ""
		setIPandROUTE
		printf "%s -  End setup IP and Routes %s \n" "$(date +%T)" ""
		ib=$(mmcli -m "$im" |grep -m 1 "Bearer" |cut -d/ -f6)
		printf "%s ping ISP DNS : %s \n" "$(date +%T)" "${arrayA[bearer.ipv4-config.dns.value[1]]}"
		ping  -4 -s 1 -c 2 -W1 "${arrayA[bearer.ipv4-config.dns.value[1]]}"
	fi

	if [ "$testping1" -eq 0 ]; then
		printf "%s time: %s  Testing.. %s: " "$(date +%T)" "${arrayA[bearer.stats.duration]}" "$site1"
		printf " FAILED!!\n%s  Testing.. %s: \n" "$(date +%T)" "8.8.8.8"
		testping2=$(ping -4 -s 1 -c 1 -W 1 -n 8.8.8.8  | grep "9 bytes" -c )
	fi

	if [ "$testping1" -gt 0 ] || [ "$testping2" -gt 0 ]; then
		#printf "%s -  CONNECTED %s \n" "$(date +%T)" ""
		[[ -e /dev/shm/NOT-CONNECTED ]] && rm /dev/shm/NOT-CONNECTED
		sleep 2 &
		wait $!
	else
		printf "%s time: %s  Testing.. %s: " "$(date +%T)" "${arrayA[bearer.stats.duration]}" "$site1"
		printf "%s -  NOT Connected %s \n" "$(date +%T)" ""
		echo -n > /dev/shm/NOT-CONNECTED
		bearer -x
		sleep 1
	fi
done

